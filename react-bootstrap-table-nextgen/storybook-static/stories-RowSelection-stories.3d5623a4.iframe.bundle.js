"use strict";(self.webpackChunkreact_bootstrap_table_nextgen_example=self.webpackChunkreact_bootstrap_table_nextgen_example||[]).push([[418],{"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_require__.d(__webpack_exports__,{Z:()=>_objectWithoutProperties})},"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}__webpack_require__.d(__webpack_exports__,{Z:()=>_toConsumableArray})},"./src/stories/RowSelection.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdvanceSelectionManagement:()=>AdvanceSelectionManagement,ClickToSelect:()=>ClickToSelect,ClickToSelectAndEditCell:()=>ClickToSelectAndEditCell,CustomSelection:()=>CustomSelection,CustomSelectionColumnHeaderStyle:()=>CustomSelectionColumnHeaderStyle,CustomSelectionColumnStyle:()=>CustomSelectionColumnStyle,DefaultSelect:()=>DefaultSelect,HideSelectAll:()=>HideSelectAll,HideSelectionColumn:()=>HideSelectionColumn,MultipleSelection:()=>MultipleSelection,NotSelectableRows:()=>NotSelectableRows,NotSelectableRowsClass:()=>NotSelectableRowsClass,NotSelectableRowsStyle:()=>NotSelectableRowsStyle,RowSelectAndExpand:()=>RowSelectAndExpand,SelectManagement:()=>SelectManagement,SelectWithoutData:()=>SelectWithoutData,SelectionBackgroundColor:()=>SelectionBackgroundColor,SelectionClass:()=>SelectionClass,SelectionColumnPosition:()=>SelectionColumnPosition,SelectionHooks:()=>SelectionHooks,SelectionStyle:()=>SelectionStyle,SingleSelection:()=>SingleSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>RowSelection_stories});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("../react-bootstrap-table-nextgen-editor/lib/index.js"),common=__webpack_require__("./src/utils/common.ts"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),createSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createSuper.js"),react_bootstrap_table_nextgen_lib=__webpack_require__("../react-bootstrap-table-nextgen/lib/index.js"),code_block=__webpack_require__("./src/components/common/code-block.tsx"),jsx_runtime=(__webpack_require__("../react-bootstrap-table-nextgen-filter/style/react-bootstrap-table-nextgen-filter.scss"),__webpack_require__("../react-bootstrap-table-nextgen-paginator/style/react-bootstrap-table-nextgen-paginator.scss"),__webpack_require__("../react-bootstrap-table-nextgen-toolkit/style/react-bootstrap-table-nextgen-toolkit.scss"),__webpack_require__("../react-bootstrap-table-nextgen/style/react-bootstrap-table-nextgen.scss"),__webpack_require__("./src/stories/stylesheet/storybook.scss"),__webpack_require__("./src/stories/stylesheet/tomorrow.min.css"),__webpack_require__("./node_modules/react/jsx-runtime.js")),SelectionManagment=function(_React$Component){(0,inherits.Z)(SelectionManagment,_React$Component);var _super=(0,createSuper.Z)(SelectionManagment);function SelectionManagment(props){var _this;return(0,classCallCheck.Z)(this,SelectionManagment),(_this=_super.call(this,props)).handleBtnClick=function(){_this.state.selected.includes(2)?_this.setState((function(prevState){return{selected:prevState.selected.filter((function(x){return 2!==x}))}})):_this.setState((function(prevState){return{selected:[].concat((0,toConsumableArray.Z)(prevState.selected),[2])}}))},_this.handleOnSelect=function(row,isSelect){isSelect?_this.setState((function(prevState){return{selected:[].concat((0,toConsumableArray.Z)(prevState.selected),[row.id])}})):_this.setState((function(prevState){return{selected:prevState.selected.filter((function(x){return x!==row.id}))}}))},_this.handleOnSelectAll=function(isSelect,rows){var ids=rows.map((function(r){return r.id}));isSelect?_this.setState((function(){return{selected:ids}})):_this.setState((function(){return{selected:[]}}))},_this.state={selected:[0,1]},_this}return(0,createClass.Z)(SelectionManagment,[{key:"render",value:function render(){var products=(0,common.bG)(),selectRow={mode:"checkbox",clickToSelect:!0,selected:this.state.selected,onSelect:this.handleOnSelect,onSelectAll:this.handleOnSelectAll};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{className:"btn btn-success",onClick:this.handleBtnClick,children:"Select/UnSelect 3rd row"}),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data:products,columns:[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],selectRow}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    class SelectionManagment extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = { selected: [0, 1] };\n      }\n\n      handleBtnClick = () => {\n        if (!this.state.selected.includes(2)) {\n          this.setState(() => ({\n            selected: [...this.state.selected, 2]\n          }));\n        } else {\n          this.setState(() => ({\n            selected: this.state.selected.filter(x => x !== 2)\n          }));\n        }\n      }\n\n      handleOnSelect = (row, isSelect) => {\n        if (isSelect) {\n          this.setState(() => ({\n            selected: [...this.state.selected, row.id]\n          }));\n        } else {\n          this.setState(() => ({\n            selected: this.state.selected.filter(x => x !== row.id)\n          }));\n        }\n      }\n\n      handleOnSelectAll = (isSelect, rows) => {\n        const ids = rows.map(r => r.id);\n        if (isSelect) {\n          this.setState(() => ({\n            selected: ids\n          }));\n        } else {\n          this.setState(() => ({\n            selected: []\n          }));\n        }\n      }\n\n      render() {\n        const selectRow = {\n          mode: 'checkbox',\n          clickToSelect: true,\n          selected: this.state.selected,\n          onSelect: this.handleOnSelect,\n          onSelectAll: this.handleOnSelectAll\n        };\n        return (\n          <div>\n            <button className=\"btn btn-success\" onClick={ this.handleBtnClick }>Select/UnSelect 3rd row</button>\n            <BootstrapTable keyField=\"id\" data={ products } columns={ columns } selectRow={ selectRow } />\n            <Code>{ sourceCode }</Code>\n          </div>\n        );\n      }\n    }\n    "})]})}}]),SelectionManagment}(react.Component);try{RowSelection.displayName="RowSelection",RowSelection.__docgenInfo={description:"",displayName:"RowSelection",props:{mode:{defaultValue:null,description:"",name:"mode",required:!0,type:{name:"any"}},header:{defaultValue:null,description:"",name:"header",required:!0,type:{name:"any"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"any"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"any"}},sourceCode:{defaultValue:null,description:"",name:"sourceCode",required:!0,type:{name:"any"}},sourceCode1:{defaultValue:null,description:"",name:"sourceCode1",required:!0,type:{name:"any"}},sourceCode2:{defaultValue:null,description:"",name:"sourceCode2",required:!0,type:{name:"any"}},selectRow:{defaultValue:null,description:"",name:"selectRow",required:!0,type:{name:"any"}},selectRow1:{defaultValue:null,description:"",name:"selectRow1",required:!0,type:{name:"any"}},selectRow2:{defaultValue:null,description:"",name:"selectRow2",required:!0,type:{name:"any"}},expandRow:{defaultValue:null,description:"",name:"expandRow",required:!0,type:{name:"any"}},cellEdit:{defaultValue:null,description:"",name:"cellEdit",required:!0,type:{name:"any"}},noDataIndication:{defaultValue:null,description:"",name:"noDataIndication",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/RowSelection.tsx#RowSelection"]={docgenInfo:RowSelection.__docgenInfo,name:"RowSelection",path:"src/stories/RowSelection.tsx#RowSelection"})}catch(__react_docgen_typescript_loader_error){}var _SingleSelection$para,_SingleSelection$para2,_SingleSelection$para3,_MultipleSelection$pa,_MultipleSelection$pa2,_MultipleSelection$pa3,_ClickToSelect$parame,_ClickToSelect$parame2,_ClickToSelect$parame3,_DefaultSelect$parame,_DefaultSelect$parame2,_DefaultSelect$parame3,_SelectManagement$par,_SelectManagement$par2,_SelectManagement$par3,_AdvanceSelectionMana,_AdvanceSelectionMana2,_AdvanceSelectionMana3,_ClickToSelectAndEdit,_ClickToSelectAndEdit2,_ClickToSelectAndEdit3,_RowSelectAndExpand$p,_RowSelectAndExpand$p2,_RowSelectAndExpand$p3,_SelectWithoutData$pa,_SelectWithoutData$pa2,_SelectWithoutData$pa3,_SelectionStyle$param,_SelectionStyle$param2,_SelectionStyle$param3,_SelectionClass$param,_SelectionClass$param2,_SelectionClass$param3,_CustomSelectionColum,_CustomSelectionColum2,_CustomSelectionColum3,_HideSelectAll$parame,_HideSelectAll$parame2,_HideSelectAll$parame3,_CustomSelection$para,_CustomSelection$para2,_CustomSelection$para3,_SelectionBackgroundC,_SelectionBackgroundC2,_SelectionBackgroundC3,_NotSelectableRows$pa,_NotSelectableRows$pa2,_NotSelectableRows$pa3,_NotSelectableRowsSty,_NotSelectableRowsSty2,_NotSelectableRowsSty3,_NotSelectableRowsCla,_NotSelectableRowsCla2,_NotSelectableRowsCla3,_SelectionHooks$param,_SelectionHooks$param2,_SelectionHooks$param3,_HideSelectionColumn$,_HideSelectionColumn$2,_HideSelectionColumn$3,_CustomSelectionColum4,_CustomSelectionColum5,_CustomSelectionColum6,_SelectionColumnPosit,_SelectionColumnPosit2,_SelectionColumnPosit3,bootstrap_style=__webpack_require__("./src/stories/bootstrap-style.tsx"),_excluded=["mode"],_excluded2=["indeterminate"],_excluded3=["mode"];const RowSelection_stories={title:"Row Selection",component:function(_ref){var mode=_ref.mode,header=_ref.header,data=_ref.data,columns=_ref.columns,sourceCode=_ref.sourceCode,sourceCode1=_ref.sourceCode1,sourceCode2=_ref.sourceCode2,selectRow=_ref.selectRow,selectRow1=_ref.selectRow1,selectRow2=_ref.selectRow2,expandRow=_ref.expandRow,cellEdit=_ref.cellEdit,noDataIndication=_ref.noDataIndication;switch(mode){case"management":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(SelectionManagment,{})});case"style":return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data,columns,selectRow:selectRow1}),(0,jsx_runtime.jsx)(code_block.Z,{children:sourceCode1}),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data,columns,selectRow:selectRow2}),(0,jsx_runtime.jsx)(code_block.Z,{children:sourceCode2})]});default:return(0,jsx_runtime.jsxs)("div",{children:[header,(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data,columns,selectRow,expandRow,cellEdit,noDataIndication}),(0,jsx_runtime.jsx)(code_block.Z,{children:sourceCode})]})}},parameters:{layout:"centered"},tags:["autodocs"],argTypes:{mode:{control:"text",description:"mode"},data:{control:"object",description:"table data"},columns:{control:"object",description:"table columns"},sourceCode:{control:"text",description:"source code of the table"},sourceCode1:{control:"text",description:"source code of the table"},sourceCode2:{control:"text",description:"source code of the table"},selectRow:{control:"array",description:"row list"},selectRow1:{control:"array",description:"row list"},selectRow2:{control:"array",description:"row list"},cellEdit:{control:"object",description:"cell edit object"},noDataIndication:{control:"text",description:"no data indication"}},decorators:[function(Story){return(0,bootstrap_style.Z)()(Story)}]};var SingleSelection={name:"Single selection",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'radio',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"radio",clickToSelect:!0}}},MultipleSelection={name:"Multiple selection",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0}}},ClickToSelect={name:"Click to select",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0}}},DefaultSelect={name:"Default select",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selected: [1, 3]\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,selected:[1,3]}}},SelectManagement={name:"Select management",args:{mode:"management"}},AdvanceSelectionManagement={name:"Advance selection management",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    class AdvSelectionManagment extends React.Component {\n      handleOnSelect = (row, isSelect) => {\n        if (isSelect && row.id < 3) {\n          alert('Oops, You can not select Product ID which less than 3');\n          return false; // return false to deny current select action\n        }\n        return true; // return true or dont return to approve current select action\n      }\n\n      handleOnSelectAll = (isSelect, rows) => {\n        if (isSelect) {\n          return rows.filter(r => r.id >= 3).map(r => r.id);\n        }\n      }\n\n      render() {\n        const selectRow = {\n          mode: 'checkbox',\n          clickToSelect: true,\n          onSelect: this.handleOnSelect,\n          onSelectAll: this.handleOnSelectAll\n        };\n        return (\n          <div>\n            <h3>You can not select Product ID less than 3</h3>\n            <BootstrapTable keyField=\"id\" data={ products } columns={ columns } selectRow={ selectRow } />\n            <Code>{ sourceCode }</Code>\n          </div>\n        );\n      }\n    }\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,onSelect:function handleOnSelect(row,isSelect){return!(isSelect&&row.id<3)||(alert("Oops, You can not select Product ID which less than 3"),!1)},onSelectAll:function handleOnSelectAll(isSelect,rows){if(isSelect)return rows.filter((function(r){return r.id>=3})).map((function(r){return r.id}))}}}},ClickToSelectAndEditCell={name:"Click to select and edit cell",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import cellEditFactory from 'react-bootstrap-table-nextgen-editor';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToEdit: true  // Click to edit cell also\n    };\n\n    const cellEdit = {\n      mode: 'click'\n    };\n\n    <BootstrapTable\n      keyField=\"id\"\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n      cellEdit={ cellEditFactory({ mode: 'click' }) }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,clickToEdit:!0},cellEdit:(0,lib.default)({mode:"click"})}},RowSelectAndExpand={name:"Row select and expand",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToExpand: true\n    };\n\n    const expandRow = {\n      showExpandColumn: true,\n      renderer: row => (\n        <div>\n          <p>{ `This Expand row is belong to rowKey ${row.id}` }</p>\n          <p>You can render anything here, also you can add additional data on every row object</p>\n          <p>expandRow.renderer callback will pass the origin row object to you</p>\n        </div>\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n      expandRow={ expandRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,clickToExpand:!0},expandRow:{showExpandColumn:!0,renderer:function renderer(row){return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"This Expand row is belong to rowKey ".concat(row.id)}),(0,jsx_runtime.jsx)("p",{children:"You can render anything here, also you can add additional data on every row object"}),(0,jsx_runtime.jsx)("p",{children:"expandRow.renderer callback will pass the origin row object to you"})]})}}}},SelectWithoutData={name:"Select without data",args:{columns:common.zF,data:[],sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ [] }\n      columns={ columns }\n      selectRow={ selectRow }\n      noDataIndication={ 'no results found' }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0},noDataIndication:"no results found"}},SelectionStyle={name:"Selection style",args:{mode:"style",columns:common.zF,data:(0,common.bG)(),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: { backgroundColor: '#c8e6c9' }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: (row, rowIndex) => {\n        const backgroundColor = rowIndex > 1 ? '#00BFFF' : '#00FFFF';\n        return { backgroundColor };\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"checkbox",clickToSelect:!0,style:{backgroundColor:"#c8e6c9"}},selectRow2:{mode:"checkbox",clickToSelect:!0,style:function style(row,rowIndex){return{backgroundColor:rowIndex>1?"#00BFFF":"#00FFFF"}}}}},SelectionClass={name:"Selection class",args:{mode:"style",columns:common.zF,data:(0,common.bG)(),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: 'selection-row'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: (row, rowIndex) =>\n        (rowIndex > 1 ? 'row-index-bigger-than-2101' : 'row-index-small-than-2101')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"checkbox",clickToSelect:!0,classes:"selection-row"},selectRow2:{mode:"checkbox",clickToSelect:!0,classes:function classes(row,rowIndex){return rowIndex>1?"row-index-bigger-than-2101":"row-index-small-than-2101"}}}},CustomSelectionColumnHeaderStyle={name:"Custom selection column header style",args:{mode:"style",columns:common.zF,data:(0,common.bG)(2),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ...\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: {\n        backgroundColor: 'blue'\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ...\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: (status) => {\n        if (status === 'checked') {\n          return {\n            backgroundColor: 'yellow'\n          };\n        } else if (status === 'indeterminate') {\n          return {\n            backgroundColor: 'pink'\n          };\n        } else if (status === 'unchecked') {\n          return {\n            backgroundColor: 'grey'\n          };\n        }\n        return {};\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"checkbox",clickToSelect:!0,headerColumnStyle:{backgroundColor:"blue"}},selectRow2:{mode:"checkbox",clickToSelect:!0,headerColumnStyle:function headerColumnStyle(status){return"checked"===status?{backgroundColor:"yellow"}:"indeterminate"===status?{backgroundColor:"pink"}:"unchecked"===status?{backgroundColor:"grey"}:{}}}}},HideSelectAll={name:"Hide select all",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectAll: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,hideSelectAll:!0}}},CustomSelection={name:"Custom selection",args:{mode:"style",columns:common.zF,data:(0,common.bG)(),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ....;\n\n    const selectRow = {\n      mode: 'radio',\n      clickToSelect: true,\n      selectionHeaderRenderer: () => 'X',\n      selectionRenderer: ({ mode, ...rest }) => (\n        <input type={ mode } { ...rest } />\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ....;\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectionHeaderRenderer: ({ indeterminate, ...rest }) => (\n        <input\n          type=\"checkbox\"\n          ref={ (input) => {\n            if (input) input.indeterminate = indeterminate;\n          } }\n          { ...rest }\n        />\n      ),\n      selectionRenderer: ({ mode, ...rest }) => (\n        <input type={ mode } { ...rest } />\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"radio",clickToSelect:!0,selectionHeaderRenderer:function selectionHeaderRenderer(){return"X"},selectionRenderer:function selectionRenderer(_ref){var mode=_ref.mode,rest=(0,objectWithoutProperties.Z)(_ref,_excluded);return(0,jsx_runtime.jsx)("input",(0,objectSpread2.Z)({type:mode,onChange:function onChange(){}},rest))}},selectRow2:{mode:"checkbox",clickToSelect:!0,selectionHeaderRenderer:function selectionHeaderRenderer(_ref2){var indeterminate=_ref2.indeterminate,rest=(0,objectWithoutProperties.Z)(_ref2,_excluded2);return(0,jsx_runtime.jsx)("input",(0,objectSpread2.Z)({type:"checkbox",ref:function ref(input){input&&(input.indeterminate=indeterminate)},onChange:function onChange(){}},rest))},selectionRenderer:function selectionRenderer(_ref3){var mode=_ref3.mode,rest=(0,objectWithoutProperties.Z)(_ref3,_excluded3);return(0,jsx_runtime.jsx)("input",(0,objectSpread2.Z)({type:mode,onChange:function onChange(){}},rest))}}}},SelectionBackgroundColor={name:"Selection background color",args:{mode:"style",columns:common.zF,data:(0,common.bG)(),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: (row, rowIndex) => (rowIndex > 1 ? '#00BFFF' : '#00FFFF')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"checkbox",clickToSelect:!0,bgColor:"#00BFFF"},selectRow2:{mode:"checkbox",clickToSelect:!0,bgColor:function bgColor(row,rowIndex){return rowIndex>1?"#00BFFF":"#00FFFF"}}}},NotSelectableRows={name:"Not selectable rows",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4]\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,nonSelectable:[0,2,4]}}},NotSelectableRowsStyle={name:"Not selectable rows style",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableStyle: { backgroundColor: 'gray' }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,nonSelectable:[0,2,4],nonSelectableStyle:{backgroundColor:"gray"}}}},NotSelectableRowsClass={name:"Not selectable rows class",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableClasses: 'row-index-bigger-than-2101'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,nonSelectable:[0,2,4],nonSelectableClasses:"row-index-bigger-than-2101"}}},SelectionHooks={name:"Selection hooks",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: (row, isSelect, rowIndex, e) => {\n        console.log(row.id);\n        console.log(isSelect);\n        console.log(rowIndex);\n        console.log(e);\n      },\n      onSelectAll: (isSelect, rows, e) => {\n        console.log(isSelect);\n        console.log(rows);\n        console.log(e);\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,onSelect:function onSelect(row,isSelect,rowIndex,e){console.log(row.id),console.log(isSelect),console.log(rowIndex),console.log(e)},onSelectAll:function onSelectAll(isSelect,rows,e){console.log(isSelect),console.log(rows),console.log(e)}}}},HideSelectionColumn={name:"Hide selection column",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectColumn: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,hideSelectColumn:!0,bgColor:"#00BFFF"}}},CustomSelectionColumnStyle={name:"Custom selection column style",args:{mode:"style",columns:common.zF,data:(0,common.bG)(2),sourceCode1:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",sourceCode2:"    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: (row, rowIndex) => (rowIndex > 1 ? '#00BFFF' : '#00FFFF')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow1:{mode:"checkbox",clickToSelect:!0,selectColumnStyle:{backgroundColor:"grey"}},selectRow2:{mode:"checkbox",clickToSelect:!0,selectColumnStyle:function selectColumnStyle(_ref4){var checked=_ref4.checked;_ref4.disabled,_ref4.rowIndex,_ref4.rowKey;return checked?{backgroundColor:"yellow"}:{backgroundColor:"pink"}}}}},SelectionColumnPosition={name:"Selection column position",args:{columns:common.zF,data:(0,common.bG)(),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectColumnPosition: 'right'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    ",selectRow:{mode:"checkbox",clickToSelect:!0,selectColumnPosition:"right"}}};SingleSelection.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SingleSelection.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SingleSelection$para=SingleSelection.parameters)||void 0===_SingleSelection$para?void 0:_SingleSelection$para.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Single selection\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'radio',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'radio',\n      clickToSelect: true\n    }\n  }\n}"},null===(_SingleSelection$para2=SingleSelection.parameters)||void 0===_SingleSelection$para2||null===(_SingleSelection$para3=_SingleSelection$para2.docs)||void 0===_SingleSelection$para3?void 0:_SingleSelection$para3.source)})}),MultipleSelection.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},MultipleSelection.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_MultipleSelection$pa=MultipleSelection.parameters)||void 0===_MultipleSelection$pa?void 0:_MultipleSelection$pa.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Multiple selection\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true\n    }\n  }\n}"},null===(_MultipleSelection$pa2=MultipleSelection.parameters)||void 0===_MultipleSelection$pa2||null===(_MultipleSelection$pa3=_MultipleSelection$pa2.docs)||void 0===_MultipleSelection$pa3?void 0:_MultipleSelection$pa3.source)})}),ClickToSelect.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},ClickToSelect.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_ClickToSelect$parame=ClickToSelect.parameters)||void 0===_ClickToSelect$parame?void 0:_ClickToSelect$parame.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Click to select\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true\n    }\n  }\n}"},null===(_ClickToSelect$parame2=ClickToSelect.parameters)||void 0===_ClickToSelect$parame2||null===(_ClickToSelect$parame3=_ClickToSelect$parame2.docs)||void 0===_ClickToSelect$parame3?void 0:_ClickToSelect$parame3.source)})}),DefaultSelect.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},DefaultSelect.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_DefaultSelect$parame=DefaultSelect.parameters)||void 0===_DefaultSelect$parame?void 0:_DefaultSelect$parame.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Default select\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selected: [1, 3]\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selected: [1, 3]\n    }\n  }\n}"},null===(_DefaultSelect$parame2=DefaultSelect.parameters)||void 0===_DefaultSelect$parame2||null===(_DefaultSelect$parame3=_DefaultSelect$parame2.docs)||void 0===_DefaultSelect$parame3?void 0:_DefaultSelect$parame3.source)})}),SelectManagement.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectManagement.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectManagement$par=SelectManagement.parameters)||void 0===_SelectManagement$par?void 0:_SelectManagement$par.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Select management",\n  args: {\n    mode: "management"\n  }\n}'},null===(_SelectManagement$par2=SelectManagement.parameters)||void 0===_SelectManagement$par2||null===(_SelectManagement$par3=_SelectManagement$par2.docs)||void 0===_SelectManagement$par3?void 0:_SelectManagement$par3.source)})}),AdvanceSelectionManagement.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},AdvanceSelectionManagement.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_AdvanceSelectionMana=AdvanceSelectionManagement.parameters)||void 0===_AdvanceSelectionMana?void 0:_AdvanceSelectionMana.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Advance selection management\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    class AdvSelectionManagment extends React.Component {\n      handleOnSelect = (row, isSelect) => {\n        if (isSelect && row.id < 3) {\n          alert('Oops, You can not select Product ID which less than 3');\n          return false; // return false to deny current select action\n        }\n        return true; // return true or dont return to approve current select action\n      }\n\n      handleOnSelectAll = (isSelect, rows) => {\n        if (isSelect) {\n          return rows.filter(r => r.id >= 3).map(r => r.id);\n        }\n      }\n\n      render() {\n        const selectRow = {\n          mode: 'checkbox',\n          clickToSelect: true,\n          onSelect: this.handleOnSelect,\n          onSelectAll: this.handleOnSelectAll\n        };\n        return (\n          <div>\n            <h3>You can not select Product ID less than 3</h3>\n            <BootstrapTable keyField=\"id\" data={ products } columns={ columns } selectRow={ selectRow } />\n            <Code>{ sourceCode }</Code>\n          </div>\n        );\n      }\n    }\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: handleOnSelect,\n      onSelectAll: handleOnSelectAll\n    }\n  }\n}"},null===(_AdvanceSelectionMana2=AdvanceSelectionManagement.parameters)||void 0===_AdvanceSelectionMana2||null===(_AdvanceSelectionMana3=_AdvanceSelectionMana2.docs)||void 0===_AdvanceSelectionMana3?void 0:_AdvanceSelectionMana3.source)})}),ClickToSelectAndEditCell.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},ClickToSelectAndEditCell.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_ClickToSelectAndEdit=ClickToSelectAndEditCell.parameters)||void 0===_ClickToSelectAndEdit?void 0:_ClickToSelectAndEdit.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Click to select and edit cell\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import cellEditFactory from 'react-bootstrap-table-nextgen-editor';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToEdit: true  // Click to edit cell also\n    };\n\n    const cellEdit = {\n      mode: 'click'\n    };\n\n    <BootstrapTable\n      keyField=\"id\"\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n      cellEdit={ cellEditFactory({ mode: 'click' }) }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToEdit: true\n    },\n    cellEdit: cellEditFactory({\n      mode: 'click'\n    })\n  }\n}"},null===(_ClickToSelectAndEdit2=ClickToSelectAndEditCell.parameters)||void 0===_ClickToSelectAndEdit2||null===(_ClickToSelectAndEdit3=_ClickToSelectAndEdit2.docs)||void 0===_ClickToSelectAndEdit3?void 0:_ClickToSelectAndEdit3.source)})}),RowSelectAndExpand.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},RowSelectAndExpand.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_RowSelectAndExpand$p=RowSelectAndExpand.parameters)||void 0===_RowSelectAndExpand$p?void 0:_RowSelectAndExpand$p.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Row select and expand\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToExpand: true\n    };\n\n    const expandRow = {\n      showExpandColumn: true,\n      renderer: row => (\n        <div>\n          <p>{ \\`This Expand row is belong to rowKey $\\{row.id}\\` }</p>\n          <p>You can render anything here, also you can add additional data on every row object</p>\n          <p>expandRow.renderer callback will pass the origin row object to you</p>\n        </div>\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n      expandRow={ expandRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      clickToExpand: true\n    },\n    expandRow: {\n      showExpandColumn: true,\n      renderer: (row: any) => <div>\n          <p>{`This Expand row is belong to rowKey ${row.id}`}</p>\n          <p>You can render anything here, also you can add additional data on every row object</p>\n          <p>expandRow.renderer callback will pass the origin row object to you</p>\n        </div>\n    }\n  }\n}"},null===(_RowSelectAndExpand$p2=RowSelectAndExpand.parameters)||void 0===_RowSelectAndExpand$p2||null===(_RowSelectAndExpand$p3=_RowSelectAndExpand$p2.docs)||void 0===_RowSelectAndExpand$p3?void 0:_RowSelectAndExpand$p3.source)})}),SelectWithoutData.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectWithoutData.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectWithoutData$pa=SelectWithoutData.parameters)||void 0===_SelectWithoutData$pa?void 0:_SelectWithoutData$pa.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Select without data\",\n  args: {\n    columns: columns,\n    data: [],\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ [] }\n      columns={ columns }\n      selectRow={ selectRow }\n      noDataIndication={ 'no results found' }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true\n    },\n    noDataIndication: \"no results found\"\n  }\n}"},null===(_SelectWithoutData$pa2=SelectWithoutData.parameters)||void 0===_SelectWithoutData$pa2||null===(_SelectWithoutData$pa3=_SelectWithoutData$pa2.docs)||void 0===_SelectWithoutData$pa3?void 0:_SelectWithoutData$pa3.source)})}),SelectionStyle.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectionStyle.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectionStyle$param=SelectionStyle.parameters)||void 0===_SelectionStyle$param?void 0:_SelectionStyle$param.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Selection style\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: { backgroundColor: '#c8e6c9' }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: (row, rowIndex) => {\n        const backgroundColor = rowIndex > 1 ? '#00BFFF' : '#00FFFF';\n        return { backgroundColor };\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: {\n        backgroundColor: '#c8e6c9'\n      }\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      style: (row: any, rowIndex: number) => {\n        const backgroundColor = rowIndex > 1 ? '#00BFFF' : '#00FFFF';\n        return {\n          backgroundColor\n        };\n      }\n    }\n  }\n}"},null===(_SelectionStyle$param2=SelectionStyle.parameters)||void 0===_SelectionStyle$param2||null===(_SelectionStyle$param3=_SelectionStyle$param2.docs)||void 0===_SelectionStyle$param3?void 0:_SelectionStyle$param3.source)})}),SelectionClass.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectionClass.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectionClass$param=SelectionClass.parameters)||void 0===_SelectionClass$param?void 0:_SelectionClass$param.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Selection class\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: 'selection-row'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: (row, rowIndex) =>\n        (rowIndex > 1 ? 'row-index-bigger-than-2101' : 'row-index-small-than-2101')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: 'selection-row'\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      classes: (row: any, rowIndex: number) => rowIndex > 1 ? 'row-index-bigger-than-2101' : 'row-index-small-than-2101'\n    }\n  }\n}"},null===(_SelectionClass$param2=SelectionClass.parameters)||void 0===_SelectionClass$param2||null===(_SelectionClass$param3=_SelectionClass$param2.docs)||void 0===_SelectionClass$param3?void 0:_SelectionClass$param3.source)})}),CustomSelectionColumnHeaderStyle.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomSelectionColumnHeaderStyle.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomSelectionColum=CustomSelectionColumnHeaderStyle.parameters)||void 0===_CustomSelectionColum?void 0:_CustomSelectionColum.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom selection column header style\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(2),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ...\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: {\n        backgroundColor: 'blue'\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ...\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: (status) => {\n        if (status === 'checked') {\n          return {\n            backgroundColor: 'yellow'\n          };\n        } else if (status === 'indeterminate') {\n          return {\n            backgroundColor: 'pink'\n          };\n        } else if (status === 'unchecked') {\n          return {\n            backgroundColor: 'grey'\n          };\n        }\n        return {};\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: {\n        backgroundColor: 'blue'\n      }\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      headerColumnStyle: (status: string) => {\n        if (status === 'checked') {\n          return {\n            backgroundColor: 'yellow'\n          };\n        } else if (status === 'indeterminate') {\n          return {\n            backgroundColor: 'pink'\n          };\n        } else if (status === 'unchecked') {\n          return {\n            backgroundColor: 'grey'\n          };\n        }\n        return {};\n      }\n    }\n  }\n}"},null===(_CustomSelectionColum2=CustomSelectionColumnHeaderStyle.parameters)||void 0===_CustomSelectionColum2||null===(_CustomSelectionColum3=_CustomSelectionColum2.docs)||void 0===_CustomSelectionColum3?void 0:_CustomSelectionColum3.source)})}),HideSelectAll.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},HideSelectAll.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_HideSelectAll$parame=HideSelectAll.parameters)||void 0===_HideSelectAll$parame?void 0:_HideSelectAll$parame.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Hide select all\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectAll: true\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectAll: true\n    }\n  }\n}"},null===(_HideSelectAll$parame2=HideSelectAll.parameters)||void 0===_HideSelectAll$parame2||null===(_HideSelectAll$parame3=_HideSelectAll$parame2.docs)||void 0===_HideSelectAll$parame3?void 0:_HideSelectAll$parame3.source)})}),CustomSelection.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomSelection.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomSelection$para=CustomSelection.parameters)||void 0===_CustomSelection$para?void 0:_CustomSelection$para.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom selection\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ....;\n\n    const selectRow = {\n      mode: 'radio',\n      clickToSelect: true,\n      selectionHeaderRenderer: () => 'X',\n      selectionRenderer: ({ mode, ...rest }) => (\n        <input type={ mode } { ...rest } />\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = ....;\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectionHeaderRenderer: ({ indeterminate, ...rest }) => (\n        <input\n          type=\"checkbox\"\n          ref={ (input) => {\n            if (input) input.indeterminate = indeterminate;\n          } }\n          { ...rest }\n        />\n      ),\n      selectionRenderer: ({ mode, ...rest }) => (\n        <input type={ mode } { ...rest } />\n      )\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'radio',\n      clickToSelect: true,\n      selectionHeaderRenderer: () => 'X',\n      selectionRenderer: ({\n        mode,\n        ...rest\n      }) => <input type={mode} onChange={() => {}} {...rest} />\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectionHeaderRenderer: ({\n        indeterminate,\n        ...rest\n      }) => <input type=\"checkbox\" ref={input => {\n        if (input) input.indeterminate = indeterminate;\n      }} onChange={() => {}} {...rest} />,\n      selectionRenderer: ({\n        mode,\n        ...rest\n      }) => <input type={mode} onChange={() => {}} {...rest} />\n    }\n  }\n}"},null===(_CustomSelection$para2=CustomSelection.parameters)||void 0===_CustomSelection$para2||null===(_CustomSelection$para3=_CustomSelection$para2.docs)||void 0===_CustomSelection$para3?void 0:_CustomSelection$para3.source)})}),SelectionBackgroundColor.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectionBackgroundColor.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectionBackgroundC=SelectionBackgroundColor.parameters)||void 0===_SelectionBackgroundC?void 0:_SelectionBackgroundC.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Selection background color\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: (row, rowIndex) => (rowIndex > 1 ? '#00BFFF' : '#00FFFF')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#00BFFF'\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: (row: any, rowIndex: number) => rowIndex > 1 ? '#00BFFF' : '#00FFFF'\n    }\n  }\n}"},null===(_SelectionBackgroundC2=SelectionBackgroundColor.parameters)||void 0===_SelectionBackgroundC2||null===(_SelectionBackgroundC3=_SelectionBackgroundC2.docs)||void 0===_SelectionBackgroundC3?void 0:_SelectionBackgroundC3.source)})}),NotSelectableRows.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},NotSelectableRows.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_NotSelectableRows$pa=NotSelectableRows.parameters)||void 0===_NotSelectableRows$pa?void 0:_NotSelectableRows$pa.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Not selectable rows\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4]\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4]\n    }\n  }\n}"},null===(_NotSelectableRows$pa2=NotSelectableRows.parameters)||void 0===_NotSelectableRows$pa2||null===(_NotSelectableRows$pa3=_NotSelectableRows$pa2.docs)||void 0===_NotSelectableRows$pa3?void 0:_NotSelectableRows$pa3.source)})}),NotSelectableRowsStyle.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},NotSelectableRowsStyle.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_NotSelectableRowsSty=NotSelectableRowsStyle.parameters)||void 0===_NotSelectableRowsSty?void 0:_NotSelectableRowsSty.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Not selectable rows style\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableStyle: { backgroundColor: 'gray' }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableStyle: {\n        backgroundColor: 'gray'\n      }\n    }\n  }\n}"},null===(_NotSelectableRowsSty2=NotSelectableRowsStyle.parameters)||void 0===_NotSelectableRowsSty2||null===(_NotSelectableRowsSty3=_NotSelectableRowsSty2.docs)||void 0===_NotSelectableRowsSty3?void 0:_NotSelectableRowsSty3.source)})}),NotSelectableRowsClass.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},NotSelectableRowsClass.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_NotSelectableRowsCla=NotSelectableRowsClass.parameters)||void 0===_NotSelectableRowsCla?void 0:_NotSelectableRowsCla.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Not selectable rows class\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableClasses: 'row-index-bigger-than-2101'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      nonSelectable: [0, 2, 4],\n      nonSelectableClasses: 'row-index-bigger-than-2101'\n    }\n  }\n}"},null===(_NotSelectableRowsCla2=NotSelectableRowsClass.parameters)||void 0===_NotSelectableRowsCla2||null===(_NotSelectableRowsCla3=_NotSelectableRowsCla2.docs)||void 0===_NotSelectableRowsCla3?void 0:_NotSelectableRowsCla3.source)})}),SelectionHooks.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectionHooks.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectionHooks$param=SelectionHooks.parameters)||void 0===_SelectionHooks$param?void 0:_SelectionHooks$param.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Selection hooks\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: (row, isSelect, rowIndex, e) => {\n        console.log(row.id);\n        console.log(isSelect);\n        console.log(rowIndex);\n        console.log(e);\n      },\n      onSelectAll: (isSelect, rows, e) => {\n        console.log(isSelect);\n        console.log(rows);\n        console.log(e);\n      }\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      onSelect: (row: any, isSelect: any, rowIndex: number, e: any) => {\n        console.log(row.id);\n        console.log(isSelect);\n        console.log(rowIndex);\n        console.log(e);\n      },\n      onSelectAll: (isSelect: any, rows: any, e: any) => {\n        console.log(isSelect);\n        console.log(rows);\n        console.log(e);\n      }\n    }\n  }\n}"},null===(_SelectionHooks$param2=SelectionHooks.parameters)||void 0===_SelectionHooks$param2||null===(_SelectionHooks$param3=_SelectionHooks$param2.docs)||void 0===_SelectionHooks$param3?void 0:_SelectionHooks$param3.source)})}),HideSelectionColumn.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},HideSelectionColumn.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_HideSelectionColumn$=HideSelectionColumn.parameters)||void 0===_HideSelectionColumn$?void 0:_HideSelectionColumn$.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Hide selection column\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectColumn: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      hideSelectColumn: true,\n      bgColor: '#00BFFF'\n    }\n  }\n}"},null===(_HideSelectionColumn$2=HideSelectionColumn.parameters)||void 0===_HideSelectionColumn$2||null===(_HideSelectionColumn$3=_HideSelectionColumn$2.docs)||void 0===_HideSelectionColumn$3?void 0:_HideSelectionColumn$3.source)})}),CustomSelectionColumnStyle.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomSelectionColumnStyle.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomSelectionColum4=CustomSelectionColumnStyle.parameters)||void 0===_CustomSelectionColum4?void 0:_CustomSelectionColum4.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom selection column style\",\n  args: {\n    mode: \"style\",\n    columns: columns,\n    data: productsGenerator(2),\n    sourceCode1: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#00BFFF'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    sourceCode2: `\\\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: (row, rowIndex) => (rowIndex > 1 ? '#00BFFF' : '#00FFFF')\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow1: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectColumnStyle: {\n        backgroundColor: 'grey'\n      }\n    },\n    selectRow2: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectColumnStyle: ({\n        checked,\n        disabled,\n        rowIndex,\n        rowKey\n      }) => {\n        if (checked) {\n          return {\n            backgroundColor: 'yellow'\n          };\n        }\n        return {\n          backgroundColor: 'pink'\n        };\n      }\n    }\n  }\n}"},null===(_CustomSelectionColum5=CustomSelectionColumnStyle.parameters)||void 0===_CustomSelectionColum5||null===(_CustomSelectionColum6=_CustomSelectionColum5.docs)||void 0===_CustomSelectionColum6?void 0:_CustomSelectionColum6.source)})}),SelectionColumnPosition.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},SelectionColumnPosition.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_SelectionColumnPosit=SelectionColumnPosition.parameters)||void 0===_SelectionColumnPosit?void 0:_SelectionColumnPosit.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Selection column position\",\n  args: {\n    columns: columns,\n    data: productsGenerator(),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectColumnPosition: 'right'\n    };\n\n    <BootstrapTable\n      keyField='id'\n      data={ products }\n      columns={ columns }\n      selectRow={ selectRow }\n    />\n    `,\n    selectRow: {\n      mode: 'checkbox',\n      clickToSelect: true,\n      selectColumnPosition: 'right'\n    }\n  }\n}"},null===(_SelectionColumnPosit2=SelectionColumnPosition.parameters)||void 0===_SelectionColumnPosit2||null===(_SelectionColumnPosit3=_SelectionColumnPosit2.docs)||void 0===_SelectionColumnPosit3?void 0:_SelectionColumnPosit3.source)})});var __namedExportsOrder=["SingleSelection","MultipleSelection","ClickToSelect","DefaultSelect","SelectManagement","AdvanceSelectionManagement","ClickToSelectAndEditCell","RowSelectAndExpand","SelectWithoutData","SelectionStyle","SelectionClass","CustomSelectionColumnHeaderStyle","HideSelectAll","CustomSelection","SelectionBackgroundColor","NotSelectableRows","NotSelectableRowsStyle","NotSelectableRowsClass","SelectionHooks","HideSelectionColumn","CustomSelectionColumnStyle","SelectionColumnPosition"]}}]);