/*! For license information please see stories-Pagination-stories.f6de775d.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkreact_bootstrap_table_nextgen_example=self.webpackChunkreact_bootstrap_table_nextgen_example||[]).push([[27],{"../../node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes=[],i=0;i<arguments.length;i++){var arg=arguments[i];if(arg){var argType=typeof arg;if("string"===argType||"number"===argType)classes.push(arg);else if(Array.isArray(arg)){if(arg.length){var inner=classNames.apply(null,arg);inner&&classes.push(inner)}}else if("object"===argType){if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]")){classes.push(arg.toString());continue}for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&classes.push(key)}}}return classes.join(" ")}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}__webpack_require__.d(__webpack_exports__,{Z:()=>_toConsumableArray})},"./src/stories/Pagination.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicPaginationTable:()=>BasicPaginationTable,CustomPageButton:()=>CustomPageButton,CustomPageList:()=>CustomPageList,CustomPagination:()=>CustomPagination,CustomPaginationWithFilter:()=>CustomPaginationWithFilter,CustomPaginationWithSearch:()=>CustomPaginationWithSearch,CustomSizePerPage:()=>CustomSizePerPage,CustomSizePerPageOption:()=>CustomSizePerPageOption,FullCustomPagination:()=>FullCustomPagination,PaginationHooks:()=>PaginationHooks,PaginationWithDynamicData:()=>PaginationWithDynamicData,RemoteFullCustomPagination:()=>RemoteFullCustomPagination,StandalonePaginationList:()=>Pagination_stories_StandalonePaginationList,StandalonePaginationTotal:()=>Pagination_stories_StandalonePaginationTotal,StandaloneSizePerPageDropdown:()=>StandaloneSizePerPageDropdown,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Pagination_stories});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("../react-bootstrap-table-nextgen-paginator/lib/index.js"),common=__webpack_require__("./src/utils/common.ts"),toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),classCallCheck=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),inherits=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/inherits.js"),createSuper=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createSuper.js"),react_bootstrap_table_nextgen_lib=__webpack_require__("../react-bootstrap-table-nextgen/lib/index.js"),react_bootstrap_table_nextgen_filter_lib=__webpack_require__("../react-bootstrap-table-nextgen-filter/lib/index.js"),react_bootstrap_table_nextgen_toolkit_lib=__webpack_require__("../react-bootstrap-table-nextgen-toolkit/lib/index.js"),code_block=__webpack_require__("./src/components/common/code-block.tsx"),jsx_runtime=(__webpack_require__("../react-bootstrap-table-nextgen-filter/style/react-bootstrap-table-nextgen-filter.scss"),__webpack_require__("../react-bootstrap-table-nextgen-paginator/style/react-bootstrap-table-nextgen-paginator.scss"),__webpack_require__("../react-bootstrap-table-nextgen-toolkit/style/react-bootstrap-table-nextgen-toolkit.scss"),__webpack_require__("../react-bootstrap-table-nextgen/style/react-bootstrap-table-nextgen.scss"),__webpack_require__("./src/stories/stylesheet/storybook.scss"),__webpack_require__("./src/stories/stylesheet/tomorrow.min.css"),__webpack_require__("./node_modules/react/jsx-runtime.js")),BookList=function(_React$Component){(0,inherits.Z)(BookList,_React$Component);var _super=(0,createSuper.Z)(BookList);function BookList(){var _this;(0,classCallCheck.Z)(this,BookList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return(_this=_super.call.apply(_super,[this].concat(args))).state={books:[{id:"1",name:"Book 1"},{id:"2",name:"Book 2"},{id:"3",name:"Book 3"},{id:"4",name:"Book 4"},{id:"5",name:"Book 5"},{id:"6",name:"Book 6"},{id:"7",name:"Book 7"},{id:"8",name:"Book 8"},{id:"9",name:"Book 9"},{id:"10",name:"Book 10"},{id:"11",name:"Book 11"}]},_this.deleteBookWithId=function(){var lastOneId=_this.state.books.length,updatedBooks=_this.state.books.filter((function(m){return m.id!==lastOneId.toString()}));_this.setState({books:updatedBooks})},_this.addBook=function(){var lastOneId=_this.state.books.length+1;_this.setState({books:[].concat((0,toConsumableArray.Z)(_this.state.books),[{id:"".concat(lastOneId),name:"Book ".concat(lastOneId)}])})},_this}return(0,createClass.Z)(BookList,[{key:"render",value:function render(){var columns=[{dataField:"id",text:"Product ID",formatter:function formatter(cell){return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("span",{title:cell,children:cell})})}},{dataField:"name",text:"Product Name"}];return(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data:this.state.books,columns,pagination:(0,lib.ZP)({sizePerPage:5,hideSizePerPage:!0,hidePageListOnlyOnePage:!0})}),(0,jsx_runtime.jsx)("button",{className:"btn btn-default",onClick:this.deleteBookWithId,children:"delete last one book"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-default",onClick:this.addBook,children:"Add a book to the end"}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    class BookList extends React.Component {\n      state = {\n        books: [\n          { id: '1', name: 'Book 1' },\n          { id: '2', name: 'Book 2' },\n          { id: '3', name: 'Book 3' },\n          { id: '4', name: 'Book 4' },\n          { id: '5', name: 'Book 5' },\n          { id: '6', name: 'Book 6' }\n        ]\n      };\n\n      deleteBookWithId = () => {\n        const lastOneId = this.state.books.length;\n        const updatedBooks = this.state.books.filter(m => m.id !== lastOneId.toString());\n        this.setState({ books: updatedBooks });\n      };\n\n      addBook = () => {\n        const lastOneId = this.state.books.length + 1;\n        this.setState({ books: [...this.state.books, {\n          id: `${lastOneId}`, name: `Book ${lastOneId}`\n        }] });\n      }\n\n      render() {\n        const options = {\n          // pageStartIndex: 0,\n          sizePerPage: 5,\n          hideSizePerPage: true,\n          hidePageListOnlyOnePage: true\n        };\n        const columns = [\n          {\n            dataField: 'id',\n            text: 'Product ID',\n            Cell: row => (\n              <div>\n                <span title={ row.value }>{ row.value }</span>\n              </div>\n            )\n          },\n          {\n            dataField: 'name',\n            text: 'Product Name'\n          }\n        ];\n\n        return (\n          <React.Fragment>\n            <BootstrapTable\n              keyField=\"id\"\n              data={ this.state.books }\n              columns={ columns }\n              pagination={ paginationFactory(options) }\n            />\n            <button className=\"btn btn-default\" onClick={ () => this.deleteBookWithId() }>\n              delete last one book\n            </button>\n            <button className=\"btn btn-default\" onClick={ () => this.addBook() }>\n              Add a book to the end\n            </button>\n            <Code>{ sourceCode }</Code>\n          </React.Fragment>\n        );\n      }\n    "})]})}}]),BookList}(react.Component),StandalonePaginationList=function(_React$Component2){(0,inherits.Z)(StandalonePaginationList,_React$Component2);var _super2=(0,createSuper.Z)(StandalonePaginationList);function StandalonePaginationList(){var _this2;(0,classCallCheck.Z)(this,StandalonePaginationList);for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return(_this2=_super2.call.apply(_super2,[this].concat(args))).products=(0,common.bG)(87),_this2.columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],_this2.options={custom:!0,totalSize:_this2.products.length},_this2.sourceCode="  import BootstrapTable from 'react-bootstrap-table-nextgen';\n  import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table-nextgen-paginator';\n\n  const columns = [{\n    dataField: 'id',\n    text: 'Product ID'\n  }, {\n    dataField: 'name',\n    text: 'Product Name'\n  }, {\n    dataField: 'price',\n    text: 'Product Price'\n  }];\n\n  const options = {\n    custom: true,\n    totalSize: products.length\n  };\n\n  <PaginationProvider\n    pagination={ paginationFactory(options) }\n  >\n    {\n      ({\n        paginationProps,\n        paginationTableProps\n      }) => (\n        <div>\n          <PaginationListStandalone\n            { ...paginationProps }\n          />\n          <BootstrapTable\n            keyField=\"id\"\n            data={ products }\n            columns={ columns }\n            { ...paginationTableProps }\n          />\n        </div>\n      )\n    }\n  </PaginationProvider>\n  ",_this2}return(0,createClass.Z)(StandalonePaginationList,[{key:"render",value:function render(){var _this3=this;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(this.options),data:this.products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function children(_ref){var paginationProps=_ref.paginationProps,paginationTableProps=_ref.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.yJ,(0,objectSpread2.Z)({},paginationProps)),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({keyField:"id",columns:_this3.columns,data:_this3.products},paginationTableProps))]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:this.sourceCode})]})}}]),StandalonePaginationList}(react.Component),StandaloneSizePerPage=function(_React$Component3){(0,inherits.Z)(StandaloneSizePerPage,_React$Component3);var _super3=(0,createSuper.Z)(StandaloneSizePerPage);function StandaloneSizePerPage(){return(0,classCallCheck.Z)(this,StandaloneSizePerPage),_super3.apply(this,arguments)}return(0,createClass.Z)(StandaloneSizePerPage,[{key:"render",value:function render(){var products=(0,common.bG)(87),columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],options={custom:!0,totalSize:products.length};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(options),data:products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function children(_ref2){var paginationProps=_ref2.paginationProps,paginationTableProps=_ref2.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.dE,(0,objectSpread2.Z)((0,objectSpread2.Z)({},paginationProps),{},{btnContextual:"btn btn-warning"})),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({keyField:"id",columns,data:products},paginationTableProps))]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory, { PaginationProvider, SizePerPageDropdownStandalone } from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const options = {\n      custom: true,\n      totalSize: products.length\n    };\n\n    <PaginationProvider\n      pagination={ paginationFactory(options) }\n    >\n      {\n        ({\n          paginationProps,\n          paginationTableProps\n        }) => (\n          <div>\n            <SizePerPageDropdownStandalone\n              { ...paginationProps }\n            />\n            <BootstrapTable\n              keyField=\"id\"\n              data={ products }\n              columns={ columns }\n              { ...paginationTableProps }\n            />\n          </div>\n        )\n      }\n    </PaginationProvider>\n    "})]})}}]),StandaloneSizePerPage}(react.Component),StandalonePaginationTotal=function(_React$Component4){(0,inherits.Z)(StandalonePaginationTotal,_React$Component4);var _super4=(0,createSuper.Z)(StandalonePaginationTotal);function StandalonePaginationTotal(){return(0,classCallCheck.Z)(this,StandalonePaginationTotal),_super4.apply(this,arguments)}return(0,createClass.Z)(StandalonePaginationTotal,[{key:"render",value:function render(){var products=(0,common.bG)(87),columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],options={custom:!0,totalSize:products.length};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(options),data:products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function children(_ref3){var paginationProps=_ref3.paginationProps,paginationTableProps=_ref3.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.NJ,(0,objectSpread2.Z)({},paginationProps)),(0,jsx_runtime.jsx)(lib.yJ,(0,objectSpread2.Z)({},paginationProps)),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({keyField:"id",columns,data:products},paginationTableProps))]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory, { PaginationProvider, PaginationTotalStandalone, PaginationListStandalone } from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const options = {\n      custom: true,\n      totalSize: products.length\n    };\n\n    <PaginationProvider\n      pagination={ paginationFactory(options) }\n    >\n      {\n        ({\n          paginationProps,\n          paginationTableProps\n        }) => (\n          <div>\n            <PaginationTotalStandalone\n              { ...paginationProps }\n            />\n            <PaginationListStandalone\n              { ...paginationProps }\n            />\n            <BootstrapTable\n              keyField=\"id\"\n              data={ products }\n              columns={ columns }\n              { ...paginationTableProps }\n            />\n          </div>\n        )\n      }\n    </PaginationProvider>\n    "})]})}}]),StandalonePaginationTotal}(react.Component),FullyCustomPagination=function(_React$Component5){(0,inherits.Z)(FullyCustomPagination,_React$Component5);var _super5=(0,createSuper.Z)(FullyCustomPagination);function FullyCustomPagination(){var _this4;(0,classCallCheck.Z)(this,FullyCustomPagination);for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++)args[_key3]=arguments[_key3];return(_this4=_super5.call.apply(_super5,[this].concat(args))).handleNextPage=function(_ref4){var page=_ref4.page,onPageChange=_ref4.onPageChange;return function(){onPageChange(page+1)}},_this4.handlePrevPage=function(_ref5){var page=_ref5.page,onPageChange=_ref5.onPageChange;return function(){onPageChange(page-1)}},_this4.handleSizePerPage=function(_ref6,newSizePerPage){var page=_ref6.page;(0,_ref6.onSizePerPageChange)(newSizePerPage,page)},_this4}return(0,createClass.Z)(FullyCustomPagination,[{key:"render",value:function render(){var _this5=this,products=(0,common.bG)(87),columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],options={custom:!0,totalSize:products.length};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(options),data:products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function children(_ref7){var paginationProps=_ref7.paginationProps,paginationTableProps=_ref7.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["Current Page: ",paginationProps.page]}),(0,jsx_runtime.jsxs)("p",{children:["Current SizePerPage: ",paginationProps.sizePerPage]})]}),(0,jsx_runtime.jsxs)("div",{className:"btn-group",role:"group",children:[(0,jsx_runtime.jsx)("button",{className:"btn btn-success",onClick:_this5.handlePrevPage(paginationProps),children:"Prev Page"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-primary",onClick:_this5.handleNextPage(paginationProps),children:"Next Page"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-danger",onClick:function onClick(){return _this5.handleSizePerPage(paginationProps,10)},children:"Size Per Page: 10"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-warning",onClick:function onClick(){return _this5.handleSizePerPage(paginationProps,25)},children:"Size Per Page: 25"})]}),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({keyField:"id",data:products,columns},paginationTableProps))]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const options = {\n      custom: true,\n      totalSize: products.length\n    };\n\n    class FullyCustomPagination extends React.Component {\n      handleNextPage = ({\n        page,\n        onPageChange\n      }) => () => {\n        onPageChange(page + 1);\n      }\n\n      handlePrevPage = ({\n        page,\n        onPageChange\n      }) => () => {\n        onPageChange(page - 1);\n      }\n\n      handleSizePerPage = ({\n        page,\n        onSizePerPageChange\n      }, newSizePerPage) => {\n        onSizePerPageChange(newSizePerPage, page);\n      }\n\n      render() {\n        return (\n          <div>\n            <PaginationProvider\n              pagination={ paginationFactory(options) }\n            >\n              {\n                ({\n                  paginationProps,\n                  paginationTableProps\n                }) => (\n                  <div>\n                    <div>\n                      <p>Current Page: { paginationProps.page }</p>\n                      <p>Current SizePerPage: { paginationProps.sizePerPage }</p>\n                    </div>\n                    <div className=\"btn-group\" role=\"group\">\n                      <button className=\"btn btn-success\" onClick={ this.handlePrevPage(paginationProps) }>Prev Page</button>\n                      <button className=\"btn btn-primary\" onClick={ this.handleNextPage(paginationProps) }>Next Page</button>\n                      <button className=\"btn btn-danger\" onClick={ () => this.handleSizePerPage(paginationProps, 10) }>Size Per Page: 10</button>\n                      <button className=\"btn btn-warning\" onClick={ () => this.handleSizePerPage(paginationProps, 25) }>Size Per Page: 25</button>\n                    </div>\n                    <BootstrapTable\n                      keyField=\"id\"\n                      data={ products }\n                      columns={ columns }\n                      { ...paginationTableProps }\n                    />\n                  </div>\n                )\n              }\n            </PaginationProvider>\n            <Code>{ sourceCode }</Code>\n          </div>\n        );\n      }\n    }\n    "})]})}}]),FullyCustomPagination}(react.Component),RemoteFullyCustomPagination=function(_React$Component6){(0,inherits.Z)(RemoteFullyCustomPagination,_React$Component6);var _super6=(0,createSuper.Z)(RemoteFullyCustomPagination);function RemoteFullyCustomPagination(props){var _this6;return(0,classCallCheck.Z)(this,RemoteFullyCustomPagination),(_this6=_super6.call(this,props)).products=(0,common.bG)(87),_this6.columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"},{dataField:"price",text:"Product Price"}],_this6.sourceCode="  import BootstrapTable from 'react-bootstrap-table-nextgen';\n  import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table-nextgen-paginator';\n  // ...\n  const RemotePagination = ({ data, page, sizePerPage, onTableChange, totalSize }) => (\n    <div>\n      <PaginationProvider\n        pagination={\n          paginationFactory({\n            custom: true,\n            page,\n            sizePerPage,\n            totalSize\n          })\n        }\n      >\n        {\n          ({\n            paginationProps,\n            paginationTableProps\n          }) => (\n            <div>\n              <div>\n                <p>Current Page: { paginationProps.page }</p>\n                <p>Current SizePerPage: { paginationProps.sizePerPage }</p>\n              </div>\n              <div>\n                <PaginationListStandalone\n                  { ...paginationProps }\n                />\n              </div>\n              <BootstrapTable\n                remote\n                keyField=\"id\"\n                data={ data }\n                columns={ columns }\n                onTableChange={ onTableChange }\n                { ...paginationTableProps }\n              />\n            </div>\n          )\n        }\n      </PaginationProvider>\n    </div>\n  );\n\n  class Container extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        page: 1,\n        data: products.slice(0, 10),\n        sizePerPage: 10\n      };\n    }\n\n    handleTableChange = (type, { page, sizePerPage }) => {\n      const currentIndex = (page - 1) * sizePerPage;\n      setTimeout(() => {\n        this.setState(() => ({\n          page,\n          data: products.slice(currentIndex, currentIndex + sizePerPage),\n          sizePerPage\n        }));\n      }, 2000);\n    }\n\n    render() {\n      const { data, sizePerPage, page } = this.state;\n      return (\n        <RemotePagination\n          data={ data }\n          page={ page }\n          sizePerPage={ sizePerPage }\n          totalSize={ products.length }\n          onTableChange={ this.handleTableChange }\n        />\n      );\n    }\n  }\n  ",_this6.handleTableChange=function(type,_ref8){var page=_ref8.page,sizePerPage=_ref8.sizePerPage,currentIndex=(page-1)*sizePerPage;setTimeout((function(){_this6.setState((function(){return{page,data:_this6.products.slice(currentIndex,currentIndex+sizePerPage),sizePerPage}}))}),2e3)},_this6.state={page:1,data:_this6.products.slice(0,10),sizePerPage:10},_this6}return(0,createClass.Z)(RemoteFullyCustomPagination,[{key:"render",value:function render(){var _this7=this,_this$state=this.state,data=_this$state.data,sizePerPage=_this$state.sizePerPage,page=_this$state.page;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)({custom:!0,page,sizePerPage,totalSize:this.products.length}),data:this.products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function children(_ref9){var paginationProps=_ref9.paginationProps,paginationTableProps=_ref9.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("p",{children:["Current Page: ",paginationProps.page]}),(0,jsx_runtime.jsxs)("p",{children:["Current SizePerPage: ",paginationProps.sizePerPage]})]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(lib.yJ,(0,objectSpread2.Z)({},paginationProps))}),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({remote:!0,keyField:"id",data,columns:_this7.columns,onTableChange:_this7.handleTableChange},paginationTableProps))]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:this.sourceCode})]})}}]),RemoteFullyCustomPagination}(react.Component),PaginationFilter=function(_React$Component7){(0,inherits.Z)(PaginationFilter,_React$Component7);var _super7=(0,createSuper.Z)(PaginationFilter);function PaginationFilter(props){var _this8;return(0,classCallCheck.Z)(this,PaginationFilter),(_this8=_super7.call(this,props)).loadData=function(){_this8.setState({products:(0,common.qB)(40,7)})},_this8.state={products:(0,common.qB)(21)},_this8}return(0,createClass.Z)(PaginationFilter,[{key:"render",value:function render(){var _this9=this,selectOptions={0:"good",1:"Bad",2:"unknown"},columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name",filter:(0,react_bootstrap_table_nextgen_filter_lib.textFilter)()},{dataField:"quality",text:"Product Quailty",formatter:function formatter(cell){return selectOptions[cell]},filter:(0,react_bootstrap_table_nextgen_filter_lib.selectFilter)({options:selectOptions,defaultValue:0})}],options={custom:!0,paginationSize:4,pageStartIndex:1,firstPageText:"First",prePageText:"Back",nextPageText:"Next",lastPageText:"Last",nextPageTitle:"First page",prePageTitle:"Pre page",firstPageTitle:"Next page",lastPageTitle:"Last page",showTotal:!0,totalSize:this.state.products.length};return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"PaginationProvider will care the data size change. You don't do anything"}),(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(options),data:this.state.products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function contentTable(_ref10){var paginationProps=_ref10.paginationProps,paginationTableProps=_ref10.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{className:"btn btn-default",onClick:_this9.loadData,children:"Load Another Data"}),(0,jsx_runtime.jsx)(lib.yJ,(0,objectSpread2.Z)({},paginationProps)),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)({striped:!0,hover:!0,keyField:"id",data:_this9.state.products,columns,filter:(0,react_bootstrap_table_nextgen_filter_lib.default)()},paginationTableProps))})]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table-nextgen-paginator';\n    import filterFactory, { textFilter, selectFilter } from 'react-bootstrap-table-nextgen-filter';\n\n    const selectOptions = {\n      0: 'good',\n      1: 'Bad',\n      2: 'unknown'\n    };\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name',\n      filter: textFilter()\n    }, {\n      dataField: 'quality',\n      text: 'Product Quailty',\n      formatter: cell => selectOptions[cell],\n      filter: selectFilter({\n        options: selectOptions,\n        defaultValue: 0\n      })\n    }];\n\n    class Table extends React.Component {\n      state = { products }\n\n      loadData = () => {\n        this.setState({ products: productsQualityGenerator(40, 7) });\n      }\n\n      render() {\n        const options = {\n          custom: true,\n          paginationSize: 4,\n          pageStartIndex: 1,\n          firstPageText: 'First',\n          prePageText: 'Back',\n          nextPageText: 'Next',\n          lastPageText: 'Last',\n          nextPageTitle: 'First page',\n          prePageTitle: 'Pre page',\n          firstPageTitle: 'Next page',\n          lastPageTitle: 'Last page',\n          showTotal: true,\n          totalSize: this.state.products.length\n        };\n        const contentTable = ({ paginationProps, paginationTableProps }) => (\n          <div>\n            <button className=\"btn btn-default\" onClick={ this.loadData }>Load Another Data</button>\n            <PaginationListStandalone { ...paginationProps } />\n            <div>\n              <div>\n                <BootstrapTable\n                  striped\n                  hover\n                  keyField=\"id\"\n                  data={ this.state.products }\n                  columns={ columns }\n                  filter={ filterFactory() }\n                  { ...paginationTableProps }\n                />\n              </div>\n            </div>\n            <PaginationListStandalone { ...paginationProps } />\n          </div>\n        );\n\n        return (\n          <div>\n            <h2>PaginationProvider will care the data size change. You dont do anything</h2>\n            <PaginationProvider\n              pagination={\n                paginationFactory(options)\n              }\n            >\n              { contentTable }\n            </PaginationProvider>\n          </div >\n        );\n      }\n    }\n    "})]})}}]),PaginationFilter}(react.Component),PaginationSearch=function(_React$Component8){(0,inherits.Z)(PaginationSearch,_React$Component8);var _super8=(0,createSuper.Z)(PaginationSearch);function PaginationSearch(props){var _this10;return(0,classCallCheck.Z)(this,PaginationSearch),(_this10=_super8.call(this,props)).loadData=function(){_this10.setState({products:(0,common.bG)(17)})},_this10.state={products:(0,common.bG)(40)},_this10}return(0,createClass.Z)(PaginationSearch,[{key:"render",value:function render(){var _this11=this,columns=[{dataField:"id",text:"Product ID"},{dataField:"name",text:"Product Name"}],options={custom:!0,paginationSize:4,pageStartIndex:1,firstPageText:"First",prePageText:"Back",nextPageText:"Next",lastPageText:"Last",nextPageTitle:"First page",prePageTitle:"Pre page",firstPageTitle:"Next page",lastPageTitle:"Last page",showTotal:!0,totalSize:this.state.products.length},SearchBar=react_bootstrap_table_nextgen_toolkit_lib.ol.SearchBar;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h2",{children:"PaginationProvider will care the data size change. You don't do anything"}),(0,jsx_runtime.jsx)(lib.bN,{pagination:(0,lib.ZP)(options),data:this.state.products,remoteEmitter:{},isRemotePagination:function isRemotePagination(){return!1},children:function contentTable(_ref11){var paginationProps=_ref11.paginationProps,paginationTableProps=_ref11.paginationTableProps;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{className:"btn btn-default",onClick:_this11.loadData,children:"Load Another Data"}),(0,jsx_runtime.jsx)(lib.yJ,(0,objectSpread2.Z)({},paginationProps)),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_toolkit_lib.ZP,{keyField:"id",columns,data:_this11.state.products,search:!0,children:function children(toolkitprops){return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(SearchBar,(0,objectSpread2.Z)({},toolkitprops.searchProps)),(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,(0,objectSpread2.Z)((0,objectSpread2.Z)({striped:!0,hover:!0},toolkitprops.baseProps),paginationTableProps))]})}})]})}}),(0,jsx_runtime.jsx)(code_block.Z,{children:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table-nextgen-paginator';\n    import filterFactory, { textFilter } from 'react-bootstrap-table-nextgen-filter';\n\n    class Table extends React.Component {\n      state = { products }\n\n      loadData = () => {\n        this.setState({ products: productsGenerator(17) });\n      }\n\n      render() {\n        const options = {\n          custom: true,\n          paginationSize: 4,\n          pageStartIndex: 1,\n          firstPageText: 'First',\n          prePageText: 'Back',\n          nextPageText: 'Next',\n          lastPageText: 'Last',\n          nextPageTitle: 'First page',\n          prePageTitle: 'Pre page',\n          firstPageTitle: 'Next page',\n          lastPageTitle: 'Last page',\n          showTotal: true,\n          totalSize: this.state.products.length\n        };\n        const contentTable = ({ paginationProps, paginationTableProps }) => (\n          <div>\n            <button className=\"btn btn-default\" onClick={ this.loadData }>Load Another Data</button>\n            <PaginationListStandalone { ...paginationProps } />\n            <ToolkitProvider\n              keyField=\"id\"\n              columns={ columns }\n              data={ this.state.products }\n              search\n            >\n              {\n                toolkitprops => (\n                  <div>\n                    <SearchBar { ...toolkitprops.searchProps } />\n                    <BootstrapTable\n                      striped\n                      hover\n                      { ...toolkitprops.baseProps }\n                      { ...paginationTableProps }\n                    />\n                  </div>\n                )\n              }\n            </ToolkitProvider>\n            <PaginationListStandalone { ...paginationProps } />\n          </div>\n        );\n\n        return (\n          <div>\n            <h2>PaginationProvider will care the data size change. You dont do anything</h2>\n            <PaginationProvider\n              pagination={\n                paginationFactory(options)\n              }\n            >\n              { contentTable }\n            </PaginationProvider>\n            <Code>{ sourceCode }</Code>\n          </div >\n        );\n      }\n    }\n    "})]})}}]),PaginationSearch}(react.Component);try{Pagination.displayName="Pagination",Pagination.__docgenInfo={description:"",displayName:"Pagination",props:{mode:{defaultValue:null,description:"",name:"mode",required:!0,type:{name:"any"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"any"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"any"}},sourceCode:{defaultValue:null,description:"",name:"sourceCode",required:!0,type:{name:"any"}},pagination:{defaultValue:null,description:"",name:"pagination",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Pagination.tsx#Pagination"]={docgenInfo:Pagination.__docgenInfo,name:"Pagination",path:"src/stories/Pagination.tsx#Pagination"})}catch(__react_docgen_typescript_loader_error){}var _BasicPaginationTable,_BasicPaginationTable2,_BasicPaginationTable3,_PaginationHooks$para,_PaginationHooks$para2,_PaginationHooks$para3,_PaginationWithDynami,_PaginationWithDynami2,_PaginationWithDynami3,_CustomPagination$par,_CustomPagination$par2,_CustomPagination$par3,_CustomPageButton$par,_CustomPageButton$par2,_CustomPageButton$par3,_CustomPageList$param,_CustomPageList$param2,_CustomPageList$param3,_CustomSizePerPageOpt,_CustomSizePerPageOpt2,_CustomSizePerPageOpt3,_CustomSizePerPage$pa,_CustomSizePerPage$pa2,_CustomSizePerPage$pa3,_StandalonePagination,_StandalonePagination2,_StandalonePagination3,_StandaloneSizePerPag,_StandaloneSizePerPag2,_StandaloneSizePerPag3,_StandalonePagination4,_StandalonePagination5,_StandalonePagination6,_FullCustomPagination,_FullCustomPagination2,_FullCustomPagination3,_RemoteFullCustomPagi,_RemoteFullCustomPagi2,_RemoteFullCustomPagi3,_CustomPaginationWith,_CustomPaginationWith2,_CustomPaginationWith3,_CustomPaginationWith4,_CustomPaginationWith5,_CustomPaginationWith6,bootstrap_style=__webpack_require__("./src/stories/bootstrap-style.tsx");const Pagination_stories={title:"Pagination",component:function(_ref12){var mode=_ref12.mode,data=_ref12.data,columns=_ref12.columns,sourceCode=_ref12.sourceCode,pagination=_ref12.pagination;switch(mode){case"dynamic":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(BookList,{})});case"standalone-list":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(StandalonePaginationList,{})});case"standalone-dropdown":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(StandaloneSizePerPage,{})});case"standalone-total":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(StandalonePaginationTotal,{})});case"full":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(FullyCustomPagination,{})});case"remote-full":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(RemoteFullyCustomPagination,{})});case"filter":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(PaginationFilter,{})});case"search":return(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(PaginationSearch,{})});default:return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(react_bootstrap_table_nextgen_lib.default,{keyField:"id",data,columns,pagination}),(0,jsx_runtime.jsx)(code_block.Z,{children:sourceCode})]})}},parameters:{layout:"centered"},tags:["autodocs"],argTypes:{mode:{control:"text",description:"mode"},data:{control:"object",description:"table data"},columns:{control:"object",description:"table columns"},sourceCode:{control:"text",description:"source code of the table"},pagination:{control:"object",description:"table pagination"}},decorators:[function(Story){return(0,bootstrap_style.Z)()(Story)}]};var BasicPaginationTable={name:"Basic pagination table",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    <BootstrapTable keyField='id' data={ products } columns={ columns } pagination={ paginationFactory() } />\n    ",pagination:(0,lib.ZP)()}},PaginationHooks={name:"Pagination hooks",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const options = {\n      onSizePerPageChange: (sizePerPage, page) => {\n        console.log('Size per page change!!!');\n        console.log('Newest size per page:' + sizePerPage);\n        console.log('Newest page:' + page);\n      },\n      onPageChange: (page, sizePerPage) => {\n        console.log('Page change!!!');\n        console.log('Newest size per page:' + sizePerPage);\n        console.log('Newest page:' + page);\n      }\n    };\n\n    <BootstrapTable\n      keyField=\"id\"\n      data={ products }\n      columns={ columns }\n      pagination={ paginationFactory(options) }\n    />\n    ",pagination:(0,lib.ZP)({onSizePerPageChange:function onSizePerPageChange(sizePerPage,page){console.log("Size per page change!!!"),console.log("Newest size per page: ".concat(sizePerPage)),console.log("Newest page: ".concat(page))},onPageChange:function onPageChange(page,sizePerPage){console.log("Page change!!!"),console.log("Newest size per page: ".concat(sizePerPage)),console.log("Newest page: ".concat(page))}})}},PaginationWithDynamicData={name:"Pagination with dynamic data",args:{mode:"dynamic"}},customPaginationProducts=(0,common.bG)(87),CustomPagination={name:"Custom pagination",args:{columns:common.zF,data:customPaginationProducts,sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const customTotal = (from, to, size) => (\n      <span className=\"react-bootstrap-table-pagination-total\">\n        Showing { from } to { to } of { size } Results\n      </span>\n    );\n\n    const options = {\n      paginationSize: 4,\n      pageStartIndex: 0,\n      // alwaysShowAllBtns: true, // Always show next and previous button\n      // withFirstAndLast: false, // Hide the going to First and Last page button\n      // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n      // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n      firstPageText: 'First',\n      prePageText: 'Back',\n      nextPageText: 'Next',\n      lastPageText: 'Last',\n      nextPageTitle: 'First page',\n      prePageTitle: 'Pre page',\n      firstPageTitle: 'Next page',\n      lastPageTitle: 'Last page',\n      showTotal: true,\n      paginationTotalRenderer: customTotal,\n      disablePageTitle: true,\n      sizePerPageList: [{\n        text: '5', value: 5\n      }, {\n        text: '10', value: 10\n      }, {\n        text: 'All', value: products.length\n      }] // A numeric array is also available. the purpose of above example is custom the text\n    };\n\n    <BootstrapTable keyField='id' data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    ",pagination:(0,lib.ZP)({paginationSize:4,pageStartIndex:0,firstPageText:"First",prePageText:"Back",nextPageText:(0,jsx_runtime.jsx)("span",{children:"Next"}),lastPageText:"Last",nextPageTitle:"First page",prePageTitle:"Pre page",firstPageTitle:"Next page",lastPageTitle:"Last page",showTotal:!0,paginationTotalRenderer:function customTotal(from,to,size){return(0,jsx_runtime.jsxs)("span",{className:"react-bootstrap-table-pagination-total",children:["Showing ",from," to ",to," of ",size," Results"]})},disablePageTitle:!0,sizePerPageList:[{text:"5",value:5},{text:"10",value:10},{text:"All",value:customPaginationProducts.length}]})}},CustomPageButton={name:"Custom page button",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const pageButtonRenderer = ({\n      page,\n      active,\n      disable,\n      title,\n      onPageChange\n    }) => {\n      const handleClick = (e) => {\n        e.preventDefault();\n        onPageChange(page);\n      };\n      const activeStyle = {};\n      if (active) {\n        activeStyle.backgroundColor = 'black';\n        activeStyle.color = 'white';\n      } else {\n        activeStyle.backgroundColor = 'gray';\n        activeStyle.color = 'black';\n      }\n      if (typeof page === 'string') {\n        activeStyle.backgroundColor = 'white';\n        activeStyle.color = 'black';\n      }\n      return (\n        <li key={ page } className=\"page-item\">\n          <a href=\"#\" onClick={ handleClick } style={ activeStyle }>{ page }</a>\n        </li>\n      );\n    };\n\n    const options = {\n      pageButtonRenderer\n    };\n\n    <BootstrapTable keyField=\"id\" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    ",pagination:(0,lib.ZP)({pageButtonRenderer:function pageButtonRenderer(_ref){var page=_ref.page,active=_ref.active,onPageChange=(_ref.disable,_ref.title,_ref.onPageChange),activeStyle={};return active?(activeStyle.backgroundColor="black",activeStyle.color="white"):(activeStyle.backgroundColor="gray",activeStyle.color="black"),"string"==typeof page&&(activeStyle.backgroundColor="white",activeStyle.color="black"),(0,jsx_runtime.jsx)("li",{className:"page-item",children:(0,jsx_runtime.jsx)("a",{href:"#",onClick:function handleClick(e){e.preventDefault(),onPageChange(page)},style:activeStyle,children:page})},page)}})}},CustomPageList={name:"Custom page list",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const pageListRenderer = ({\n      pages,\n      onPageChange\n    }) => {\n      const pageWithoutIndication = pages.filter(p => typeof p.page !== 'string');\n      return (\n        <div>\n          {\n            pageWithoutIndication.map(p => (\n              <button key={ p.page } className=\"btn btn-success\" onClick={ () => onPageChange(p.page) }>{ p.page }</button>\n            ))\n          }\n        </div>\n      );\n    };\n\n    const options = {\n      pageListRenderer\n    };\n\n    <BootstrapTable keyField=\"id\" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    ",pagination:(0,lib.ZP)({pageListRenderer:function pageListRenderer(_ref2){var pages=_ref2.pages,onPageChange=_ref2.onPageChange,pageWithoutIndication=pages.filter((function(p){return"string"!=typeof p.page}));return(0,jsx_runtime.jsx)("div",{children:pageWithoutIndication.map((function(p){return(0,jsx_runtime.jsx)("button",{className:"btn btn-success",onClick:function onClick(){return onPageChange(p.page)},children:p.page},p.page)}))})}})}},CustomSizePerPageOption={name:"Custom size per page option",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:'    import BootstrapTable from \'react-bootstrap-table-nextgen\';\n    import paginationFactory from \'react-bootstrap-table-nextgen-paginator\';\n    // ...\n\n    const sizePerPageOptionRenderer = ({\n      text,\n      page,\n      onSizePerPageChange\n    }) => (\n      <li\n        key={ text }\n        role="presentation"\n        className="dropdown-item"\n      >\n        <a\n          href="#"\n          tabIndex="-1"\n          role="menuitem"\n          data-page={ page }\n          onMouseDown={ (e) => {\n            e.preventDefault();\n            onSizePerPageChange(page);\n          } }\n          style={ { color: \'red\' } }\n        >\n          { text }\n        </a>\n      </li>\n    );\n\n    const options = {\n      sizePerPageOptionRenderer\n    };\n\n    <BootstrapTable keyField="id" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    ',pagination:(0,lib.ZP)({sizePerPageOptionRenderer:function sizePerPageOptionRenderer(_ref3){var text=_ref3.text,page=_ref3.page,onSizePerPageChange=_ref3.onSizePerPageChange;return(0,jsx_runtime.jsx)("li",{role:"presentation",className:"dropdown-item",children:(0,jsx_runtime.jsx)("a",{href:"#",tabIndex:"-1",role:"menuitem","data-page":page,onMouseDown:function onMouseDown(e){e.preventDefault(),onSizePerPageChange(page)},style:{color:"red"},children:text})},text)}})}},CustomSizePerPage={name:"Custom size per page",args:{columns:common.zF,data:(0,common.bG)(87),sourceCode:"    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const sizePerPageRenderer = ({\n      options,\n      currSizePerPage,\n      onSizePerPageChange\n    }) => (\n      <div className=\"btn-group\" role=\"group\">\n        {\n          options.map((option) => {\n            const isSelect = currSizePerPage === `${option.page}`;\n            return (\n              <button\n                key={ option.text }\n                type=\"button\"\n                onClick={ () => onSizePerPageChange(option.page) }\n                className={ `btn ${isSelect ? 'btn-secondary' : 'btn-warning'}` }\n              >\n                { option.text }\n              </button>\n            );\n          })\n        }\n      </div>\n    );\n\n    const options = {\n      sizePerPageRenderer\n    };\n\n    <BootstrapTable keyField=\"id\" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    ",pagination:(0,lib.ZP)({sizePerPageRenderer:function sizePerPageRenderer(_ref4){var options=_ref4.options,currSizePerPage=_ref4.currSizePerPage,onSizePerPageChange=_ref4.onSizePerPageChange;return(0,jsx_runtime.jsx)("div",{className:"btn-group",role:"group",children:options.map((function(option){return(0,jsx_runtime.jsx)("button",{type:"button",onClick:function onClick(){return onSizePerPageChange(option.page)},className:"btn ".concat(currSizePerPage==="".concat(option.page)?"btn-secondary":"btn-warning"),children:option.text},option.text)}))})}})}},Pagination_stories_StandalonePaginationList={name:"Standalone pagination list",args:{mode:"standalone-list"}},StandaloneSizePerPageDropdown={name:"Standalone size per page dropdown",args:{mode:"standalone-dropdown"}},Pagination_stories_StandalonePaginationTotal={name:"Standalone pagination total",args:{mode:"standalone-total"}},FullCustomPagination={name:"Full custom pagination",args:{mode:"full"}},RemoteFullCustomPagination={name:"Remote full custom pagination",args:{mode:"remote-full"}},CustomPaginationWithFilter={name:"Custom pagination with filter",args:{mode:"filter"}},CustomPaginationWithSearch={name:"Custom pagination with search",args:{mode:"search"}};BasicPaginationTable.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},BasicPaginationTable.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_BasicPaginationTable=BasicPaginationTable.parameters)||void 0===_BasicPaginationTable?void 0:_BasicPaginationTable.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Basic pagination table\",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    <BootstrapTable keyField='id' data={ products } columns={ columns } pagination={ paginationFactory() } />\n    `,\n    pagination: paginationFactory()\n  }\n}"},null===(_BasicPaginationTable2=BasicPaginationTable.parameters)||void 0===_BasicPaginationTable2||null===(_BasicPaginationTable3=_BasicPaginationTable2.docs)||void 0===_BasicPaginationTable3?void 0:_BasicPaginationTable3.source)})}),PaginationHooks.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},PaginationHooks.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_PaginationHooks$para=PaginationHooks.parameters)||void 0===_PaginationHooks$para?void 0:_PaginationHooks$para.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Pagination hooks\",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n\n    const columns = [{\n      dataField: 'id',\n      text: 'Product ID'\n    }, {\n      dataField: 'name',\n      text: 'Product Name'\n    }, {\n      dataField: 'price',\n      text: 'Product Price'\n    }];\n\n    const options = {\n      onSizePerPageChange: (sizePerPage, page) => {\n        console.log('Size per page change!!!');\n        console.log('Newest size per page:' + sizePerPage);\n        console.log('Newest page:' + page);\n      },\n      onPageChange: (page, sizePerPage) => {\n        console.log('Page change!!!');\n        console.log('Newest size per page:' + sizePerPage);\n        console.log('Newest page:' + page);\n      }\n    };\n\n    <BootstrapTable\n      keyField=\"id\"\n      data={ products }\n      columns={ columns }\n      pagination={ paginationFactory(options) }\n    />\n    `,\n    pagination: paginationFactory({\n      onSizePerPageChange: (sizePerPage: number, page: any) => {\n        console.log('Size per page change!!!');\n        console.log(`Newest size per page: ${sizePerPage}`);\n        console.log(`Newest page: ${page}`);\n      },\n      onPageChange: (page: any, sizePerPage: number) => {\n        console.log('Page change!!!');\n        console.log(`Newest size per page: ${sizePerPage}`);\n        console.log(`Newest page: ${page}`);\n      }\n    })\n  }\n}"},null===(_PaginationHooks$para2=PaginationHooks.parameters)||void 0===_PaginationHooks$para2||null===(_PaginationHooks$para3=_PaginationHooks$para2.docs)||void 0===_PaginationHooks$para3?void 0:_PaginationHooks$para3.source)})}),PaginationWithDynamicData.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},PaginationWithDynamicData.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_PaginationWithDynami=PaginationWithDynamicData.parameters)||void 0===_PaginationWithDynami?void 0:_PaginationWithDynami.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Pagination with dynamic data",\n  args: {\n    mode: "dynamic"\n  }\n}'},null===(_PaginationWithDynami2=PaginationWithDynamicData.parameters)||void 0===_PaginationWithDynami2||null===(_PaginationWithDynami3=_PaginationWithDynami2.docs)||void 0===_PaginationWithDynami3?void 0:_PaginationWithDynami3.source)})}),CustomPagination.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomPagination.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomPagination$par=CustomPagination.parameters)||void 0===_CustomPagination$par?void 0:_CustomPagination$par.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom pagination\",\n  args: {\n    columns: columns,\n    data: customPaginationProducts,\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const customTotal = (from, to, size) => (\n      <span className=\"react-bootstrap-table-pagination-total\">\n        Showing { from } to { to } of { size } Results\n      </span>\n    );\n\n    const options = {\n      paginationSize: 4,\n      pageStartIndex: 0,\n      // alwaysShowAllBtns: true, // Always show next and previous button\n      // withFirstAndLast: false, // Hide the going to First and Last page button\n      // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n      // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n      firstPageText: 'First',\n      prePageText: 'Back',\n      nextPageText: 'Next',\n      lastPageText: 'Last',\n      nextPageTitle: 'First page',\n      prePageTitle: 'Pre page',\n      firstPageTitle: 'Next page',\n      lastPageTitle: 'Last page',\n      showTotal: true,\n      paginationTotalRenderer: customTotal,\n      disablePageTitle: true,\n      sizePerPageList: [{\n        text: '5', value: 5\n      }, {\n        text: '10', value: 10\n      }, {\n        text: 'All', value: products.length\n      }] // A numeric array is also available. the purpose of above example is custom the text\n    };\n\n    <BootstrapTable keyField='id' data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    `,\n    pagination: paginationFactory({\n      paginationSize: 4,\n      pageStartIndex: 0,\n      // alwaysShowAllBtns: true, // Always show next and previous button\n      // withFirstAndLast: false, // Hide the going to First and Last page button\n      // hideSizePerPage: true, // Hide the sizePerPage dropdown always\n      // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n      firstPageText: 'First',\n      prePageText: 'Back',\n      nextPageText: <span>Next</span>,\n      lastPageText: 'Last',\n      nextPageTitle: 'First page',\n      prePageTitle: 'Pre page',\n      firstPageTitle: 'Next page',\n      lastPageTitle: 'Last page',\n      showTotal: true,\n      paginationTotalRenderer: customTotal,\n      disablePageTitle: true,\n      sizePerPageList: [{\n        text: '5',\n        value: 5\n      }, {\n        text: '10',\n        value: 10\n      }, {\n        text: 'All',\n        value: customPaginationProducts.length\n      }] // A numeric array is also available. the purpose of above example is custom the text\n    })\n  }\n}"},null===(_CustomPagination$par2=CustomPagination.parameters)||void 0===_CustomPagination$par2||null===(_CustomPagination$par3=_CustomPagination$par2.docs)||void 0===_CustomPagination$par3?void 0:_CustomPagination$par3.source)})}),CustomPageButton.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomPageButton.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomPageButton$par=CustomPageButton.parameters)||void 0===_CustomPageButton$par?void 0:_CustomPageButton$par.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom page button\",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const pageButtonRenderer = ({\n      page,\n      active,\n      disable,\n      title,\n      onPageChange\n    }) => {\n      const handleClick = (e) => {\n        e.preventDefault();\n        onPageChange(page);\n      };\n      const activeStyle = {};\n      if (active) {\n        activeStyle.backgroundColor = 'black';\n        activeStyle.color = 'white';\n      } else {\n        activeStyle.backgroundColor = 'gray';\n        activeStyle.color = 'black';\n      }\n      if (typeof page === 'string') {\n        activeStyle.backgroundColor = 'white';\n        activeStyle.color = 'black';\n      }\n      return (\n        <li key={ page } className=\"page-item\">\n          <a href=\"#\" onClick={ handleClick } style={ activeStyle }>{ page }</a>\n        </li>\n      );\n    };\n\n    const options = {\n      pageButtonRenderer\n    };\n\n    <BootstrapTable keyField=\"id\" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    `,\n    pagination: paginationFactory({\n      pageButtonRenderer\n    })\n  }\n}"},null===(_CustomPageButton$par2=CustomPageButton.parameters)||void 0===_CustomPageButton$par2||null===(_CustomPageButton$par3=_CustomPageButton$par2.docs)||void 0===_CustomPageButton$par3?void 0:_CustomPageButton$par3.source)})}),CustomPageList.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomPageList.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomPageList$param=CustomPageList.parameters)||void 0===_CustomPageList$param?void 0:_CustomPageList$param.docs),{},{source:(0,objectSpread2.Z)({originalSource:"{\n  name: \"Custom page list\",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from 'react-bootstrap-table-nextgen';\n    import paginationFactory from 'react-bootstrap-table-nextgen-paginator';\n    // ...\n\n    const pageListRenderer = ({\n      pages,\n      onPageChange\n    }) => {\n      const pageWithoutIndication = pages.filter(p => typeof p.page !== 'string');\n      return (\n        <div>\n          {\n            pageWithoutIndication.map(p => (\n              <button key={ p.page } className=\"btn btn-success\" onClick={ () => onPageChange(p.page) }>{ p.page }</button>\n            ))\n          }\n        </div>\n      );\n    };\n\n    const options = {\n      pageListRenderer\n    };\n\n    <BootstrapTable keyField=\"id\" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    `,\n    pagination: paginationFactory({\n      pageListRenderer\n    })\n  }\n}"},null===(_CustomPageList$param2=CustomPageList.parameters)||void 0===_CustomPageList$param2||null===(_CustomPageList$param3=_CustomPageList$param2.docs)||void 0===_CustomPageList$param3?void 0:_CustomPageList$param3.source)})}),CustomSizePerPageOption.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomSizePerPageOption.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomSizePerPageOpt=CustomSizePerPageOption.parameters)||void 0===_CustomSizePerPageOpt?void 0:_CustomSizePerPageOpt.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Custom size per page option",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from \'react-bootstrap-table-nextgen\';\n    import paginationFactory from \'react-bootstrap-table-nextgen-paginator\';\n    // ...\n\n    const sizePerPageOptionRenderer = ({\n      text,\n      page,\n      onSizePerPageChange\n    }) => (\n      <li\n        key={ text }\n        role="presentation"\n        className="dropdown-item"\n      >\n        <a\n          href="#"\n          tabIndex="-1"\n          role="menuitem"\n          data-page={ page }\n          onMouseDown={ (e) => {\n            e.preventDefault();\n            onSizePerPageChange(page);\n          } }\n          style={ { color: \'red\' } }\n        >\n          { text }\n        </a>\n      </li>\n    );\n\n    const options = {\n      sizePerPageOptionRenderer\n    };\n\n    <BootstrapTable keyField="id" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    `,\n    pagination: paginationFactory({\n      sizePerPageOptionRenderer\n    })\n  }\n}'},null===(_CustomSizePerPageOpt2=CustomSizePerPageOption.parameters)||void 0===_CustomSizePerPageOpt2||null===(_CustomSizePerPageOpt3=_CustomSizePerPageOpt2.docs)||void 0===_CustomSizePerPageOpt3?void 0:_CustomSizePerPageOpt3.source)})}),CustomSizePerPage.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomSizePerPage.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomSizePerPage$pa=CustomSizePerPage.parameters)||void 0===_CustomSizePerPage$pa?void 0:_CustomSizePerPage$pa.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Custom size per page",\n  args: {\n    columns: columns,\n    data: productsGenerator(87),\n    sourceCode: `\\\n    import BootstrapTable from \'react-bootstrap-table-nextgen\';\n    import paginationFactory from \'react-bootstrap-table-nextgen-paginator\';\n    // ...\n\n    const sizePerPageRenderer = ({\n      options,\n      currSizePerPage,\n      onSizePerPageChange\n    }) => (\n      <div className="btn-group" role="group">\n        {\n          options.map((option) => {\n            const isSelect = currSizePerPage === \\`$\\{option.page}\\`;\n            return (\n              <button\n                key={ option.text }\n                type="button"\n                onClick={ () => onSizePerPageChange(option.page) }\n                className={ \\`btn $\\{isSelect ? \'btn-secondary\' : \'btn-warning\'}\\` }\n              >\n                { option.text }\n              </button>\n            );\n          })\n        }\n      </div>\n    );\n\n    const options = {\n      sizePerPageRenderer\n    };\n\n    <BootstrapTable keyField="id" data={ products } columns={ columns } pagination={ paginationFactory(options) } />\n    `,\n    pagination: paginationFactory({\n      sizePerPageRenderer\n    })\n  }\n}'},null===(_CustomSizePerPage$pa2=CustomSizePerPage.parameters)||void 0===_CustomSizePerPage$pa2||null===(_CustomSizePerPage$pa3=_CustomSizePerPage$pa2.docs)||void 0===_CustomSizePerPage$pa3?void 0:_CustomSizePerPage$pa3.source)})}),Pagination_stories_StandalonePaginationList.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Pagination_stories_StandalonePaginationList.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_StandalonePagination=Pagination_stories_StandalonePaginationList.parameters)||void 0===_StandalonePagination?void 0:_StandalonePagination.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Standalone pagination list",\n  args: {\n    mode: "standalone-list"\n  }\n}'},null===(_StandalonePagination2=Pagination_stories_StandalonePaginationList.parameters)||void 0===_StandalonePagination2||null===(_StandalonePagination3=_StandalonePagination2.docs)||void 0===_StandalonePagination3?void 0:_StandalonePagination3.source)})}),StandaloneSizePerPageDropdown.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},StandaloneSizePerPageDropdown.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_StandaloneSizePerPag=StandaloneSizePerPageDropdown.parameters)||void 0===_StandaloneSizePerPag?void 0:_StandaloneSizePerPag.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Standalone size per page dropdown",\n  args: {\n    mode: "standalone-dropdown"\n  }\n}'},null===(_StandaloneSizePerPag2=StandaloneSizePerPageDropdown.parameters)||void 0===_StandaloneSizePerPag2||null===(_StandaloneSizePerPag3=_StandaloneSizePerPag2.docs)||void 0===_StandaloneSizePerPag3?void 0:_StandaloneSizePerPag3.source)})}),Pagination_stories_StandalonePaginationTotal.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},Pagination_stories_StandalonePaginationTotal.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_StandalonePagination4=Pagination_stories_StandalonePaginationTotal.parameters)||void 0===_StandalonePagination4?void 0:_StandalonePagination4.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Standalone pagination total",\n  args: {\n    mode: "standalone-total"\n  }\n}'},null===(_StandalonePagination5=Pagination_stories_StandalonePaginationTotal.parameters)||void 0===_StandalonePagination5||null===(_StandalonePagination6=_StandalonePagination5.docs)||void 0===_StandalonePagination6?void 0:_StandalonePagination6.source)})}),FullCustomPagination.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},FullCustomPagination.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_FullCustomPagination=FullCustomPagination.parameters)||void 0===_FullCustomPagination?void 0:_FullCustomPagination.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Full custom pagination",\n  args: {\n    mode: "full"\n  }\n}'},null===(_FullCustomPagination2=FullCustomPagination.parameters)||void 0===_FullCustomPagination2||null===(_FullCustomPagination3=_FullCustomPagination2.docs)||void 0===_FullCustomPagination3?void 0:_FullCustomPagination3.source)})}),RemoteFullCustomPagination.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},RemoteFullCustomPagination.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_RemoteFullCustomPagi=RemoteFullCustomPagination.parameters)||void 0===_RemoteFullCustomPagi?void 0:_RemoteFullCustomPagi.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Remote full custom pagination",\n  args: {\n    mode: "remote-full"\n  }\n}'},null===(_RemoteFullCustomPagi2=RemoteFullCustomPagination.parameters)||void 0===_RemoteFullCustomPagi2||null===(_RemoteFullCustomPagi3=_RemoteFullCustomPagi2.docs)||void 0===_RemoteFullCustomPagi3?void 0:_RemoteFullCustomPagi3.source)})}),CustomPaginationWithFilter.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomPaginationWithFilter.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomPaginationWith=CustomPaginationWithFilter.parameters)||void 0===_CustomPaginationWith?void 0:_CustomPaginationWith.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Custom pagination with filter",\n  args: {\n    mode: "filter"\n  }\n}'},null===(_CustomPaginationWith2=CustomPaginationWithFilter.parameters)||void 0===_CustomPaginationWith2||null===(_CustomPaginationWith3=_CustomPaginationWith2.docs)||void 0===_CustomPaginationWith3?void 0:_CustomPaginationWith3.source)})}),CustomPaginationWithSearch.parameters=(0,objectSpread2.Z)((0,objectSpread2.Z)({},CustomPaginationWithSearch.parameters),{},{docs:(0,objectSpread2.Z)((0,objectSpread2.Z)({},null===(_CustomPaginationWith4=CustomPaginationWithSearch.parameters)||void 0===_CustomPaginationWith4?void 0:_CustomPaginationWith4.docs),{},{source:(0,objectSpread2.Z)({originalSource:'{\n  name: "Custom pagination with search",\n  args: {\n    mode: "search"\n  }\n}'},null===(_CustomPaginationWith5=CustomPaginationWithSearch.parameters)||void 0===_CustomPaginationWith5||null===(_CustomPaginationWith6=_CustomPaginationWith5.docs)||void 0===_CustomPaginationWith6?void 0:_CustomPaginationWith6.source)})});var __namedExportsOrder=["BasicPaginationTable","PaginationHooks","PaginationWithDynamicData","CustomPagination","CustomPageButton","CustomPageList","CustomSizePerPageOption","CustomSizePerPage","StandalonePaginationList","StandaloneSizePerPageDropdown","StandalonePaginationTotal","FullCustomPagination","RemoteFullCustomPagination","CustomPaginationWithFilter","CustomPaginationWithSearch"]}}]);